{
	"info": {
		"_postman_id": "eb73e0e7-9cb3-48c1-a685-5bb2da4a61e3",
		"name": "danskill",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "/forgot",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "deb9d465-a9c8-4f95-bc1f-0a60f5f717ed",
								"exec": [
									"",
									"",
									"// const baseURL = pm.variables.get(\"baseURL\");",
									"",
									"// pm.sendRequest({",
									"//     url: `${baseURL}/signup`,",
									"//     header: 'content-type:application/json',",
									"//     method: 'POST',",
									"//     body: {",
									"//         mode: 'raw',",
									"//         raw: JSON.stringify({",
									"//             email: 'some@email.com',",
									"//             password: 'somepassword',",
									"//             confirmPassword: 'somepassword'",
									"//         })",
									"//     }",
									"    ",
									"// }, function (err, response) {",
									"//     console.log(response.json());",
									"// });",
									"",
									"// pm.environment.set(\"variable_key\", \"variable_value\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"non-existing@user.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/forgot",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"forgot"
							]
						}
					},
					"response": [
						{
							"name": "Existing user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"some@gmail.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/forgot",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"forgot"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "16"
								},
								{
									"key": "ETag",
									"value": "W/\"10-oV4hJxRVSENxc/wX8+mA4/Pe4tA\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Mon, 18 Nov 2019 05:51:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true\n}"
						},
						{
							"name": "Forgot password - invalid email",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"oh!com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/forgot",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"forgot"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "16"
								},
								{
									"key": "ETag",
									"value": "W/\"10-oV4hJxRVSENxc/wX8+mA4/Pe4tA\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Mon, 18 Nov 2019 05:51:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "/signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7170e5e2-587e-455a-a899-75787ef36107",
								"exec": [
									"pm.test(\"Sign up\", function () {",
									"    if (responseCode.code === 201)",
									"    {",
									"        const tokens = pm.response.json().tokens;",
									"        pm.environment.set(\"access_token\", tokens.access_token);",
									"        pm.environment.set(\"refresh_token\", tokens.refresh_token);",
									"    }",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"ohad2121@email.com\",\n\t\"password\": \"somePassword\",\n\t\"confirmPassword\": \"somePassword\",\n\t\"birthDate\": \"1992-12-31\",\n\t\"name\": {\n\t\t\"firstName\": \"ohad\",\n\t\t\"lastName\": \"fein\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/signup",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7b696d07-b35e-4a9c-bdfb-c592988998f6",
								"exec": [
									"pm.test(\"Sign up\", function () {",
									"    if (responseCode.code === 200)",
									"    {",
									"        const tokens = pm.response.json().tokens;",
									"        pm.environment.set(\"access_token\", tokens.access_token);",
									"        pm.environment.set(\"refresh_token\", tokens.refresh_token);",
									"    }",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"ohad2121@email.com\",\n\t\"password\": \"somePassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/refreshToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "509cdb13-e09d-4b30-937b-606342a6369d",
								"exec": [
									"pm.test(\"Refresh token\", function () {",
									"    if (responseCode.code === 200)",
									"    {",
									"        const tokens = pm.response.json().tokens;",
									"        pm.environment.set(\"access_token\", tokens.access_token);",
									"        pm.environment.set(\"refresh_token\", tokens.refresh_token);",
									"    }",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/refreshToken/{{refresh_token}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"refreshToken",
								"{{refresh_token}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/reset/:token",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/reset/:token",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"reset",
								":token"
							],
							"variable": [
								{
									"key": "token",
									"value": "someresettoken",
									"type": "string"
								}
							]
						},
						"description": "Confirm reset token - if success is returned, password reset form can be presented"
					},
					"response": []
				},
				{
					"name": "/reset/:token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"somePassword\",\n\t\"confirm\": \"somePassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/reset/:token",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"reset",
								":token"
							],
							"variable": [
								{
									"id": "7ef74d46-fb9f-4ab2-a4bd-75c4951723b9",
									"key": "token",
									"value": "someresettoken",
									"type": "string"
								}
							]
						},
						"description": "commit reset token - change password for a user based on reset password form"
					},
					"response": []
				},
				{
					"name": "🔑 /account/verify",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/account/verify",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"account",
								"verify"
							]
						},
						"description": "send verification email for new user - user is extracted from jwt token of the request"
					},
					"response": []
				},
				{
					"name": "🔑 /account/verify/:token",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						},
						"description": "Mark user email as verified based on token."
					},
					"response": []
				},
				{
					"name": "get my profile info",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/account/profile",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"account",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit my profile info",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":{\n\t\t\"firstName\": \"Ohadd\",\n\t\t\"lastName\": \"Fein\"\n\t},\n\t\"website\": \"www.google.com\",\n\t\"birthDate\": \"1992-12-31\",\n\t\"gender\": \"male\",\n\t\"language\": \"en\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/account/profile",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"account",
								"profile"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{authToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "bf5c81fa-a078-473e-b3c7-fa97b66c11da",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "163861c3-0b7f-4143-96ce-88345e1213d9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Stars",
			"item": [
				{
					"name": "get all stars",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ab5a57e-c94b-4ba6-b854-974fb5200199",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/stars",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"stars"
							]
						}
					},
					"response": []
				},
				{
					"name": "get specific star info",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/stars/{{starId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"stars",
								"{{starId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "add star",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed1087b5-1a2c-410b-b500-07862e42644a",
								"exec": [
									"pm.test(\"Add star\", function () {",
									"        if (responseCode.code === 201)",
									"    {",
									"        const star = pm.response.json().star;",
									"        pm.environment.set(\"starId\", star._id);",
									"    }",
									"    ",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": {\r\n    \"firstName\": \"Nina\",\r\n      \"lastName\": \"Trump\",\r\n        \"nickname\": \"Superstar\"\r\n  },\r\n  \"location\": {\r\n    \"city\": \"Tel-Aviv\",\r\n      \"country\": \"Israel\"\r\n  },\r\n  \"birthDate\": \"1981-01-20\",\r\n  \"userPics\": {\r\n  \t\"smallPicURL\": \"https://i.pinimg.com/originals/6b/7d/9f/6b7d9fd9d66a97db5abe4b7952aeeb87.png\",\r\n      \"largePicURL\": \"https://media.vogue.co.uk/photos/5d54be0919b6dd000853ad13/master/pass/original\"\r\n  },\r\n  \"promoVideoURL\": \"http://static.videogular.com/assets/videos/videogular.mp4\",\r\n   \"about\": \"A dance teacher, has a good knowledge and about 20 years of experience. Born in Moscow, Russia.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/stars/add",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"stars",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete star",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/stars/remove/{{starId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"stars",
								"remove",
								"{{starId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Figures",
			"item": [
				{
					"name": "get figure by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "734646dd-92d0-4025-b5fe-8664e7a7d72c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/figures//{{figureId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"figures",
								"",
								"{{figureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all star figures",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50ecf2d0-c9b1-419a-97e9-aaaa66c5d11c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/figures/star/all/{{starId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"figures",
								"star",
								"all",
								"{{starId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get figures by type and level",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/figures/star/{{starId}}?danceType=tango&level=1",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"figures",
								"star",
								"{{starId}}"
							],
							"query": [
								{
									"key": "danceType",
									"value": "tango"
								},
								{
									"key": "level",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add figure",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ea9b52a-d6e2-4bba-a20e-69fa14295c2c",
								"exec": [
									"pm.test(\"Add figure\", function () {",
									"        if (responseCode.code === 201)",
									"    {",
									"        const figure = pm.response.json().figure;",
									"        pm.environment.set(\"figureId\", figure._id);",
									"    }",
									"    ",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"stars\": [\"{{starId}}\"],\r\n\t\"name\": \"Spin\",\r\n\t\"coverURL\": \"https://i.pinimg.com/originals/6b/7d/9f/6b7d9fd9d66a97db5abe4b7952aeeb87.png\",\r\n\t\"type\": \"tango\",\r\n\t\"level\": \"1\",\r\n\t\"promoVideo\": \"https://www.dropbox.com/s/0x2ke57h7wv49ll/Sample_512x288.mp4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/figures/star/add",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"figures",
								"star",
								"add"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete figure",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/figures/star/{{figureId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"figures",
								"star",
								"{{figureId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Video",
			"item": [
				{
					"name": "upload video",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "944b288c-8760-49dd-b092-b6d73ff15bee",
								"exec": [
									"pm.test(\"Add video\", function () {\r",
									"    if (responseCode.code === 201) {\r",
									"        const video = pm.response.json().video;\r",
									"        pm.environment.set(\"videoId\", video._id);\r",
									"    }\r",
									"\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "video",
									"description": "video file",
									"type": "file",
									"src": "/C:/Users/Ohad/Downloads/file_example_MP4_480_1_5MG.mp4"
								},
								{
									"key": "name",
									"value": "name",
									"description": "video name",
									"type": "text"
								},
								{
									"key": "view",
									"value": "front",
									"description": "valid values: front/back",
									"type": "text"
								},
								{
									"key": "participatesAmount",
									"value": "solo",
									"description": "valid values: solo/couple",
									"type": "text"
								},
								{
									"key": "associateWith",
									"value": "figure",
									"description": "valid values: figure/video\nfigure - used for add video for figures of stars\nvideo - used for a user's video that should be compared to another figure video",
									"type": "text"
								},
								{
									"key": "type",
									"value": "comparable",
									"description": "valid values: promo/basicPrinciples/additional/comparable",
									"type": "text"
								},
								{
									"key": "associatedId",
									"value": "{{figureId}}",
									"type": "text"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/videos/upload",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"videos",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "get video",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c124faed-2a62-4f30-a809-c927bc8b2264",
								"exec": [
									"pm.test(\"Get video\", function () {\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/videos/{{videoId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"videos",
								"{{videoId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete video",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf4f1b52-e4ff-4306-989f-3bc0852f6319",
								"exec": [
									"pm.test(\"Delete video\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/videos/delete/{{videoId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"videos",
								"delete",
								"{{videoId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3859d9fe-eb1a-4d24-9e3f-75cd63799f8e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d1c0aee7-bae0-49f7-aed4-deb422d0be36",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}