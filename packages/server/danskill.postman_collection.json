{
	"info": {
		"_postman_id": "eb73e0e7-9cb3-48c1-a685-5bb2da4a61e3",
		"name": "danskill",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "/signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7170e5e2-587e-455a-a899-75787ef36107",
								"exec": [
									"pm.test(\"Sign up\", function () {",
									"    if (responseCode.code === 201)",
									"    {",
									"        const tokens = pm.response.json().data;",
									"        pm.environment.set(\"access_token\", tokens.access_token);",
									"        pm.environment.set(\"refresh_token\", tokens.refresh_token);",
									"    }",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"ohad2121@gmail.com\",\n\t\"password\": \"somePassword\",\n\t\"confirmPassword\": \"somePassword\",\n\t\"birthDate\": \"1992-12-31\",\n\t\"name\": {\n\t\t\"firstName\": \"roy\",\n\t\t\"lastName\": \"roy\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/signup",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7b696d07-b35e-4a9c-bdfb-c592988998f6",
								"exec": [
									"pm.test(\"login\", function () {",
									"    if (responseCode.code === 200)",
									"    {",
									"        const tokens = pm.response.json().data;",
									"        pm.environment.set(\"access_token\", tokens.access_token);",
									"        pm.environment.set(\"refresh_token\", tokens.refresh_token);",
									"    }",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"ohad2121@gmail.com\",\n\t\"password\": \"somePassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/forgot",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "deb9d465-a9c8-4f95-bc1f-0a60f5f717ed",
								"exec": [
									"",
									"",
									"// const baseURL = pm.variables.get(\"baseURL\");",
									"",
									"// pm.sendRequest({",
									"//     url: `${baseURL}/signup`,",
									"//     header: 'content-type:application/json',",
									"//     method: 'POST',",
									"//     body: {",
									"//         mode: 'raw',",
									"//         raw: JSON.stringify({",
									"//             email: 'some@email.com',",
									"//             password: 'somepassword',",
									"//             confirmPassword: 'somepassword'",
									"//         })",
									"//     }",
									"    ",
									"// }, function (err, response) {",
									"//     console.log(response.json());",
									"// });",
									"",
									"// pm.environment.set(\"variable_key\", \"variable_value\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"non-existing\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/forgot",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"forgot"
							]
						}
					},
					"response": [
						{
							"name": "Existing user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"some@gmail.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/forgot",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"forgot"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "16"
								},
								{
									"key": "ETag",
									"value": "W/\"10-oV4hJxRVSENxc/wX8+mA4/Pe4tA\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Mon, 18 Nov 2019 05:51:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true\n}"
						},
						{
							"name": "Forgot password - invalid email",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"oh!com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/forgot",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"forgot"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "16"
								},
								{
									"key": "ETag",
									"value": "W/\"10-oV4hJxRVSENxc/wX8+mA4/Pe4tA\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Date",
									"value": "Mon, 18 Nov 2019 05:51:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "/refreshToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "509cdb13-e09d-4b30-937b-606342a6369d",
								"exec": [
									"pm.test(\"Refresh token\", function () {",
									"    if (responseCode.code === 200)",
									"    {",
									"        const tokens = pm.response.json().data;",
									"        pm.environment.set(\"access_token\", tokens.access_token);",
									"        pm.environment.set(\"refresh_token\", tokens.refresh_token);",
									"    }",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/refreshToken/{{refresh_token}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"refreshToken",
								"{{refresh_token}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/reset/:token",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/reset/{{reset_token}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"reset",
								"{{reset_token}}"
							]
						},
						"description": "Confirm reset token - if success is returned, password reset form can be presented"
					},
					"response": []
				},
				{
					"name": "/reset/:token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"somePassword\",\n\t\"confirmPassword\": \"somePassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/reset/{{reset_token}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"reset",
								"{{reset_token}}"
							]
						},
						"description": "commit reset token - change password for a user based on reset password form"
					},
					"response": []
				},
				{
					"name": "🔑 /account/verify",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/account/verify/",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"account",
								"verify",
								""
							]
						},
						"description": "send verification email for new user - user is extracted from jwt token of the request"
					},
					"response": []
				},
				{
					"name": "🔑 /account/verify/:token",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						},
						"description": "Mark user email as verified based on token."
					},
					"response": []
				},
				{
					"name": "get my profile info",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba660c6e-9c34-4db4-963c-823cb5887a01",
								"exec": [
									"pm.test(\"Get my profile info\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/account/profile",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"account",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit my profile info",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0eaf8a68-258c-4efa-a4fd-4fac1fcd240b",
								"exec": [
									"pm.test(\"Edit my profile info\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":{\n\t\t\"firstName\": \"Ohadd\",\n\t\t\"lastName\": \"Fein\"\n\t},\n\t\"website\": \"www.google.com\",\n\t\"birthDate\": \"1992-12-31\",\n\t\"gender\": \"male\",\n\t\"language\": \"en\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/account/profile",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"account",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40b8ff07-26b8-427b-84af-d9a960ddd62f",
								"exec": [
									"pm.test(\"Edit password\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"somePassword\",\n\t\"confirmPassword\": \"somePassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/account/password",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"account",
								"password"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "bf5c81fa-a078-473e-b3c7-fa97b66c11da",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "163861c3-0b7f-4143-96ce-88345e1213d9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Admins",
			"item": [
				{
					"name": "Stars",
					"item": [
						{
							"name": "add star",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ed1087b5-1a2c-410b-b500-07862e42644a",
										"exec": [
											"pm.test(\"Add star\", function () {",
											"        if (responseCode.code === 201)",
											"    {",
											"        const star = pm.response.json().data;",
											"        pm.environment.set(\"starId\", star._id);",
											"    }",
											"    ",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"promoVideo\": \"https://d7nb4rcaibu03.cloudfront.net/stars/paul_moldovan/PROMO_OF_PAUL_MOLDOVAN.mp4\",\r\n  \"name\": {\r\n    \"firstName\": \"Olessia\",\r\n    \"lastName\": \"Getsko\"\r\n  },\r\n  \"location\": {\r\n    \"city\": \"Ukraine\"\r\n  },\r\n  \"logo\": {\r\n  \t\"small\": \"https://d7nb4rcaibu03.cloudfront.net/stars/Olessia+Getsko/Getsko_400x225.jpg\",\r\n    \"large\": \"https://d7nb4rcaibu03.cloudfront.net/stars/Olessia+Getsko/Getsko_400x225.jpg\"\r\n  },\r\n   \"about\": \"\",\r\n   \"achievements\": [\r\n\"2 times world champions 10 dance\",\r\n\"World and European cup champions\",\r\n\"Semi-Finalists Blackpool,Uk and International\",\r\n\"Semi-Finalists World championship\",\r\n\"Ukrainian champions\"\r\n       ],\r\n   \"slug\": \"Olessia-Getsko\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/admins/stars",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"admins",
										"stars"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete star",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4362275-8403-4a37-8c7a-3e6f9bb249dd",
										"exec": [
											"pm.test(\"Delete star\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseURL}}/admins/stars/{{starId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"admins",
										"stars",
										"{{starId}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Videos",
					"item": [
						{
							"name": "upload star video",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "944b288c-8760-49dd-b092-b6d73ff15bee",
										"exec": [
											"pm.test(\"Add star video\", function () {\r",
											"    if (responseCode.code === 201) {\r",
											"        const video = pm.response.json().data;\r",
											"        pm.environment.set(\"videoId\", video._id);\r",
											"    }\r",
											"\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "path",
											"value": "stars/Paul Moldovan/Opening Out",
											"type": "text",
											"disabled": true
										},
										{
											"key": "videoKey",
											"value": "stars/paul_moldovan/Rumba/Level 3/Opening Out/RUMBA_L3_OPENING_OUT_MY_LAB_PAUL.mp4",
											"type": "text"
										},
										{
											"key": "name",
											"value": "basic principles",
											"description": "video name",
											"type": "text",
											"disabled": true
										},
										{
											"key": "view",
											"value": "front",
											"description": "valid values: front/back",
											"type": "text"
										},
										{
											"key": "type",
											"value": "comparable",
											"description": "promo/basicPrinciples/tips/exercises/comparable",
											"type": "text"
										},
										{
											"key": "participatesAmount",
											"value": "couple",
											"description": "valid values: solo/couple",
											"type": "text"
										},
										{
											"key": "associatedObject",
											"value": "{{figureId}}",
											"description": "figure id",
											"type": "text"
										},
										{
											"key": "thumbnail",
											"value": "https://danskill1.s3-eu-west-1.amazonaws.com/stars/paul_moldovan/Rumba/Level+3/Opening+Out/RUMBA_L3_OPENING_OUT_MY_LAB_PAUL.mp4",
											"type": "text"
										},
										{
											"key": "video",
											"description": "video file",
											"type": "file",
											"src": "/home/ohad/Downloads/Paul Moldovan-20200814T133944Z-001/Paul Moldovan/Opening Out/Roy (user) - fake it till you make it.mp4",
											"disabled": true
										},
										{
											"key": "videoUrl",
											"value": "https://danskill1.s3-eu-west-1.amazonaws.com/stars/paul_moldovan/Rumba/Level+3/Opening+Out/RUMBA_L3_OPENING_OUT_BASIC_PRINCIPLE_PAUL.mp4",
											"type": "text"
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseURL}}/admins/videos/",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"admins",
										"videos",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "delete video",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "31fee555-a8e1-405f-8bca-f21532553f92",
										"exec": [
											"pm.test(\"Delete video\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseURL}}/admins/videos/{{videoId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"admins",
										"videos",
										"{{videoId}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "S3 objects",
					"item": [
						{
							"name": "delete s3 object",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a99e9d49-5f9f-4233-9c49-782d4a3e4704",
										"exec": [
											"pm.test(\"Delete video\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"stars/Paul Moldovan/logo.png\"\n}",
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseURL}}/admins/s3Objects/",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"admins",
										"s3Objects",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "upload s3 star logo",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae6d73f4-ab98-4a2e-8ad9-8e66fbf423a0",
										"exec": [
											"pm.test(\"Add video\", function () {\r",
											"    if (responseCode.code === 201) {\r",
											"        const video = pm.response.json().data;\r",
											"        pm.environment.set(\"videoId\", video._id);\r",
											"    }\r",
											"\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "path",
											"value": "stars/Paul Moldovan",
											"description": "video name",
											"type": "text"
										},
										{
											"key": "object",
											"description": "Must be the last parameter!!!!!",
											"type": "file",
											"src": "/home/ohad/Downloads/Paul Moldovan-20200814T133944Z-001/Paul Moldovan/photos/logo.png"
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseURL}}/admins/s3Objects",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"admins",
										"s3Objects"
									]
								}
							},
							"response": []
						},
						{
							"name": "upload s3 star promo",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "275dc9d5-db8b-4c72-8751-ffe70674b985",
										"exec": [
											"pm.test(\"Add video\", function () {\r",
											"    if (responseCode.code === 201) {\r",
											"        const video = pm.response.json().data;\r",
											"        pm.environment.set(\"videoId\", video._id);\r",
											"    }\r",
											"\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "path",
											"value": "stars/Paul Moldovan",
											"description": "video name",
											"type": "text"
										},
										{
											"key": "object",
											"description": "Must be the last parameter!!!!!",
											"type": "file",
											"src": "/home/ohad/Downloads/Paul Moldovan-20200814T133944Z-001/Paul Moldovan/promo.MP4"
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseURL}}/admins/s3Objects",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"admins",
										"s3Objects"
									]
								}
							},
							"response": []
						},
						{
							"name": "list s3 objects",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5fcb13c9-f4da-4a3d-8846-586b4a9098c1",
										"exec": [
											"pm.test(\"Add video\", function () {\r",
											"    if (responseCode.code === 201) {\r",
											"        const video = pm.response.json().data;\r",
											"        pm.environment.set(\"videoId\", video._id);\r",
											"    }\r",
											"\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseURL}}/admins/s3Objects",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"admins",
										"s3Objects"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "FIgures",
					"item": [
						{
							"name": "add figure",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4ea9b52a-d6e2-4bba-a20e-69fa14295c2c",
										"exec": [
											"pm.test(\"Add figure\", function () {",
											"    if (responseCode.code === 201)",
											"    {",
											"        const figure = pm.response.json().data;",
											"        pm.environment.set(\"figureId\", figure._id);",
											"    }",
											"    ",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"stars\": [\"{{starId}}\"],\r\n\t\"type\": \"rumba\",\r\n\t\"level\": \"3\",\r\n\t\"name\": \"Opening Out\",\r\n\t\"logo\": \"https://danskill1.s3-eu-west-1.amazonaws.com/stars/paul_moldovan/Rumba/Level+3/Opening+Out/logo.png\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/admins/figures",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"admins",
										"figures"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete figure",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4804107-27b9-4221-80bc-b63e5b0d7dc5",
										"exec": [
											"pm.test(\"Delete figure\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "{{baseURL}}/admins/figures//{{figureId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"admins",
										"figures",
										"",
										"{{figureId}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Stars",
			"item": [
				{
					"name": "get all stars",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ab5a57e-c94b-4ba6-b854-974fb5200199",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/stars",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"stars"
							]
						}
					},
					"response": []
				},
				{
					"name": "get star info",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/stars/{{starId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"stars",
								"{{starId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Figures",
			"item": [
				{
					"name": "get figure by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "734646dd-92d0-4025-b5fe-8664e7a7d72c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/figures/{{figureId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"figures",
								"{{figureId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all star figures",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50ecf2d0-c9b1-419a-97e9-aaaa66c5d11c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/figures/star/all/{{starId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"figures",
								"star",
								"all",
								"{{starId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get figures by type and level",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/figures/star/{{starId}}?danceType=rumba&level=advanced",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"figures",
								"star",
								"{{starId}}"
							],
							"query": [
								{
									"key": "danceType",
									"value": "rumba"
								},
								{
									"key": "level",
									"value": "advanced"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get figures by type and level Copy",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/figures/star/{{starId}}?danceType=rumba&level=advanced",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"figures",
								"star",
								"{{starId}}"
							],
							"query": [
								{
									"key": "danceType",
									"value": "rumba"
								},
								{
									"key": "level",
									"value": "advanced"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Video",
			"item": [
				{
					"name": "get video",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c124faed-2a62-4f30-a809-c927bc8b2264",
								"exec": [
									"pm.test(\"Get video\", function () {\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/videos/{{videoId}}2",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"videos",
								"{{videoId}}2"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Practices",
			"item": [
				{
					"name": "add practice item",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f043bd4c-e182-4738-994a-d1b0a998e837",
								"exec": [
									"pm.test(\"Add practice item\", function () {\r",
									"    if (responseCode.code === 201) {\r",
									"        const video = pm.response.json().data;\r",
									"        pm.environment.set(\"videoId\", video._id);\r",
									"    }\r",
									"\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "fake it till you make it #1",
									"description": "practice name",
									"type": "text"
								},
								{
									"key": "associatedVideoId",
									"value": "{{videoId}}",
									"description": "video id",
									"type": "text"
								},
								{
									"key": "video",
									"description": "video file",
									"type": "file",
									"src": "/home/ohad/Downloads/Paul Moldovan-20200814T133944Z-001/Paul Moldovan/Opening Out/Roy (user) - fake it till you make it.mp4"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/account/practices",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"account",
								"practices"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit practice item",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee050f55-56f6-4af4-b80a-f711bf26c5c9",
								"exec": [
									"pm.test(\"Add practice item\", function () {\r",
									"    if (responseCode.code === 201) {\r",
									"        const video = pm.response.json().data;\r",
									"        pm.environment.set(\"videoId\", video._id);\r",
									"    }\r",
									"\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"fake it till you make it #222\"\n}",
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/account/practices/{{practiceId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"account",
								"practices",
								"{{practiceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all practice items",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "11c039bf-dbfd-4b8c-80d6-d806e2ff5867",
								"exec": [
									"pm.test(\"Get all practice items\", function () {\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/account/practices",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"account",
								"practices"
							]
						}
					},
					"response": []
				},
				{
					"name": "get practice item",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f75e7837-d624-44de-a26f-e812ab8d0eaa",
								"exec": [
									"pm.test(\"Get practice item by id\", function () {\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/account/practices/{{practiceId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"account",
								"practices",
								"{{practiceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete practices item",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "72ece4b9-d7db-4f53-b19b-1a5750ce3172",
								"exec": [
									"pm.test(\"Delete practice item\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "{{baseURL}}/account/practices/{{practiceId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"account",
								"practices",
								"{{practiceId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3859d9fe-eb1a-4d24-9e3f-75cd63799f8e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d1c0aee7-bae0-49f7-aed4-deb422d0be36",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}